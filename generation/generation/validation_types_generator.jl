"""
Validation Types Generator

Generates Julia source code for validation types and GTFSSchedule documentation.
"""

include("../extraction/condition_types.jl")

"""
    generate_validation_message_struct() -> String

Generate the ValidationMessage struct definition.
"""
function generate_validation_message_struct()
    return """
\"\"\"
    ValidationMessage

Represents a specific validation message with context.

# Fields
- `file::String`: Name of the GTFS file where the message occurred
- `field::Union{String, Nothing}`: Name of the field (if applicable)
- `message::String`: Message text
- `severity::Symbol`: Message severity (:error, :warning, or :info)
\"\"\"
struct ValidationMessage
    file::String
    field::Union{String, Nothing}
    message::String
    severity::Symbol  # :error, :warning, or :info
end"""
end

"""
    generate_validation_result_struct() -> String

Generate the ValidationResult struct definition.
"""
function generate_validation_result_struct()
    return """
\"\"\"
    ValidationResult

Result of GTFS validation containing errors and warnings.

# Fields
- `is_valid::Bool`: Whether the GTFS feed is valid
- `messages::Vector{ValidationMessage}`: List of validation messages
- `summary::String`: Summary of validation results
\"\"\"
struct ValidationResult
    is_valid::Bool
    messages::Vector{ValidationMessage}
    summary::String
end"""
end



"""
    write_validation_types_file(output_path::String, parsed_files::Vector{DatasetFileDefinition})

Write the complete validation_types.jl file.
"""
function write_validation_types_file(output_path::String, parsed_files::Vector{DatasetFileDefinition})
    lines = String[]

    # Auto-generation header
    push!(lines, "# This file is auto-generated. Do not edit manually.")
    push!(lines, "# Generated by: generation/generation/validation_types_generator.jl")
    push!(lines, "")

    # Validation types
    push!(lines, generate_validation_message_struct())
    push!(lines, "\n" * generate_validation_result_struct())

    # Write file
    content = join(lines, "\n")
    write(output_path, content)

    println("âœ“ Generated validation types file: $output_path")
end

# Exports
export generate_validation_message_struct
export generate_validation_result_struct
export write_validation_types_file
